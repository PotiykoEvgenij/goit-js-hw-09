{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,SAAU,aACVC,SAAU,OACVC,aAAc,MACdC,MAAO,QACPC,QAAS,GACTC,QAAS,MAGX,MAAMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcT,EAAUU,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACZ,E,MAAUU,IAEnBG,EAAO,C,SAACb,E,MAAUU,GAAO,GAE1BA,EAAM,G,CAIbJ,EAAKY,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAEN,MAAMC,EAAaf,EAAKgB,SAASZ,MAC3Ba,EAAYjB,EAAKgB,SAASE,KAC1BC,EAAcnB,EAAKgB,SAASI,OAE5BC,EAAQC,OAAOP,EAAWQ,OAC1BL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,OAElC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAI/BrB,EAHiBqB,EAAI,EACAH,EAAQ,EAAIH,GAG9BO,MAAK,EAAC/B,SAAEA,EAAQU,MAAEA,MACnBb,EAAAF,GAASG,OAAOkC,QAAQ,uBAAqBhC,QAAiBU,MAAU,IAEvEuB,OAAM,EAACjC,SAAEA,EAAQU,MAAEA,MAClBb,EAAAF,GAASG,OAAOoC,QAAQ,sBAAoBlC,QAAeU,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  position: 'center-top',\n  distance: '10px',\n  borderRadius: '5px',\n  width: '300px',\n  opacity: 0.8,\n  timeout: 3000,\n});\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay);\n  });\n};\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const delayInput = form.elements.delay;\n  const stepInput = form.elements.step;\n  const amountInput = form.elements.amount;\n\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const promiseDelay = delay + 1 * step;\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n  }\n})\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","position","distance","borderRadius","width","opacity","timeout","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayInput","elements","stepInput","step","amountInput","amount","delay1","Number","value","i","then","success","catch","failure"],"version":3,"file":"03-promises.e6cfef15.js.map"}